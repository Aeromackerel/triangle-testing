<?xml version="1.0" encoding="UTF-8" standalone="yes"?><!DOCTYPE report PUBLIC "-//JACOCO//DTD Report 1.1//EN" "report.dtd"><report name="testing"><sessioninfo id="DESKTOP-H363JN4-39f009aa" start="1573519090901" dump="1573519091561"/><package name="practiceProject"><class name="practiceProject/InputException" sourcefilename="InputException.java"><method name="&lt;init&gt;" desc="(Ljava/lang/String;)V" line="7"><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></class><class name="practiceProject/obscureTrianglev2" sourcefilename="obscureTrianglev2.java"><method name="&lt;init&gt;" desc="()V" line="11"><counter type="INSTRUCTION" missed="0" covered="7"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="stringToPointArray" desc="([Ljava/lang/String;)[LpracticeProject/Point;" line="25"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="10"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="triangleOption" desc="(C[Ljava/lang/String;)V" line="54"><counter type="INSTRUCTION" missed="0" covered="53"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="12"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="main" desc="([Ljava/lang/String;)V" line="147"><counter type="INSTRUCTION" missed="1" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><counter type="INSTRUCTION" missed="1" covered="112"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="24"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></class><class name="practiceProject/Triangle" sourcefilename="Triangle.java"><method name="&lt;init&gt;" desc="()V" line="9"><counter type="INSTRUCTION" missed="0" covered="10"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="classifyDoubles" desc="([D)V" line="23"><counter type="INSTRUCTION" missed="0" covered="45"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="classifyDoubles" desc="()V" line="55"><counter type="INSTRUCTION" missed="0" covered="35"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="isRightTriangle" desc="()V" line="78"><counter type="INSTRUCTION" missed="0" covered="32"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="4"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="sideClassification" desc="()V" line="88"><counter type="INSTRUCTION" missed="0" covered="52"/><counter type="BRANCH" missed="1" covered="7"/><counter type="LINE" missed="0" covered="6"/><counter type="COMPLEXITY" missed="1" covered="4"/><counter type="METHOD" missed="0" covered="1"/></method><method name="checkValidity" desc="()Z" line="102"><counter type="INSTRUCTION" missed="0" covered="19"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="3"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><method name="getArea" desc="()D" line="114"><counter type="INSTRUCTION" missed="0" covered="41"/><counter type="LINE" missed="0" covered="2"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="0" covered="234"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="0" covered="32"/><counter type="COMPLEXITY" missed="1" covered="13"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></class><class name="practiceProject/Point" sourcefilename="Point.java"><method name="&lt;init&gt;" desc="()V" line="13"><counter type="INSTRUCTION" missed="3" covered="0"/><counter type="LINE" missed="1" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/></method><method name="&lt;init&gt;" desc="(DD)V" line="14"><counter type="INSTRUCTION" missed="0" covered="9"/><counter type="LINE" missed="0" covered="1"/><counter type="COMPLEXITY" missed="0" covered="1"/><counter type="METHOD" missed="0" covered="1"/></method><method name="euclidDistSquare" desc="([LpracticeProject/Point;)V" line="20"><counter type="INSTRUCTION" missed="0" covered="113"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="0" covered="9"/><counter type="COMPLEXITY" missed="0" covered="2"/><counter type="METHOD" missed="0" covered="1"/></method><counter type="INSTRUCTION" missed="3" covered="122"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></class><sourcefile name="InputException.java"><line nr="7" mi="3" ci="0" mb="0" cb="0"/><line nr="8" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="4" covered="0"/><counter type="LINE" missed="2" covered="0"/><counter type="COMPLEXITY" missed="1" covered="0"/><counter type="METHOD" missed="1" covered="0"/><counter type="CLASS" missed="1" covered="0"/></sourcefile><sourcefile name="Point.java"><line nr="13" mi="3" ci="0" mb="0" cb="0"/><line nr="14" mi="0" ci="9" mb="0" cb="0"/><line nr="20" mi="0" ci="28" mb="0" cb="0"/><line nr="21" mi="0" ci="28" mb="0" cb="0"/><line nr="22" mi="0" ci="28" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="28" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="17" mb="0" cb="2"/><line nr="31" mi="0" ci="3" mb="0" cb="0"/><line nr="35" mi="0" ci="2" mb="0" cb="0"/><line nr="36" mi="0" ci="1" mb="0" cb="0"/><counter type="INSTRUCTION" missed="3" covered="122"/><counter type="BRANCH" missed="0" covered="2"/><counter type="LINE" missed="1" covered="10"/><counter type="COMPLEXITY" missed="1" covered="3"/><counter type="METHOD" missed="1" covered="2"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="obscureTrianglev2.java"><line nr="11" mi="0" ci="4" mb="0" cb="0"/><line nr="15" mi="0" ci="3" mb="0" cb="0"/><line nr="25" mi="0" ci="3" mb="0" cb="0"/><line nr="26" mi="0" ci="3" mb="0" cb="0"/><line nr="30" mi="0" ci="8" mb="0" cb="2"/><line nr="32" mi="0" ci="9" mb="0" cb="0"/><line nr="33" mi="0" ci="6" mb="0" cb="0"/><line nr="35" mi="0" ci="5" mb="0" cb="0"/><line nr="36" mi="0" ci="5" mb="0" cb="0"/><line nr="37" mi="0" ci="8" mb="0" cb="0"/><line nr="47" mi="0" ci="3" mb="0" cb="0"/><line nr="49" mi="0" ci="2" mb="0" cb="0"/><line nr="54" mi="0" ci="3" mb="0" cb="2"/><line nr="56" mi="0" ci="5" mb="0" cb="0"/><line nr="57" mi="0" ci="8" mb="0" cb="0"/><line nr="60" mi="0" ci="3" mb="1" cb="1"/><line nr="62" mi="0" ci="3" mb="0" cb="0"/><line nr="63" mi="0" ci="7" mb="0" cb="2"/><line nr="65" mi="0" ci="7" mb="0" cb="0"/><line nr="66" mi="0" ci="6" mb="0" cb="2"/><line nr="67" mi="0" ci="3" mb="0" cb="0"/><line nr="69" mi="0" ci="4" mb="0" cb="0"/><line nr="70" mi="0" ci="3" mb="0" cb="0"/><line nr="72" mi="0" ci="1" mb="0" cb="0"/><line nr="147" mi="1" ci="0" mb="0" cb="0"/><counter type="INSTRUCTION" missed="1" covered="112"/><counter type="BRANCH" missed="1" covered="9"/><counter type="LINE" missed="1" covered="24"/><counter type="COMPLEXITY" missed="2" covered="7"/><counter type="METHOD" missed="1" covered="3"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><sourcefile name="Triangle.java"><line nr="9" mi="0" ci="4" mb="0" cb="0"/><line nr="13" mi="0" ci="6" mb="0" cb="0"/><line nr="23" mi="0" ci="2" mb="0" cb="0"/><line nr="27" mi="0" ci="5" mb="0" cb="0"/><line nr="29" mi="0" ci="3" mb="0" cb="0"/><line nr="36" mi="0" ci="3" mb="0" cb="2"/><line nr="40" mi="0" ci="2" mb="0" cb="0"/><line nr="41" mi="0" ci="2" mb="0" cb="0"/><line nr="43" mi="0" ci="16" mb="0" cb="0"/><line nr="44" mi="0" ci="11" mb="0" cb="0"/><line nr="47" mi="0" ci="1" mb="0" cb="0"/><line nr="55" mi="0" ci="3" mb="0" cb="0"/><line nr="64" mi="0" ci="2" mb="0" cb="0"/><line nr="65" mi="0" ci="2" mb="0" cb="0"/><line nr="67" mi="0" ci="16" mb="0" cb="0"/><line nr="68" mi="0" ci="11" mb="0" cb="0"/><line nr="70" mi="0" ci="1" mb="0" cb="0"/><line nr="78" mi="0" ci="24" mb="0" cb="2"/><line nr="79" mi="0" ci="4" mb="0" cb="0"/><line nr="81" mi="0" ci="3" mb="0" cb="0"/><line nr="82" mi="0" ci="1" mb="0" cb="0"/><line nr="88" mi="0" ci="20" mb="0" cb="4"/><line nr="89" mi="0" ci="4" mb="0" cb="0"/><line nr="91" mi="0" ci="20" mb="1" cb="3"/><line nr="92" mi="0" ci="4" mb="0" cb="0"/><line nr="95" mi="0" ci="3" mb="0" cb="0"/><line nr="96" mi="0" ci="1" mb="0" cb="0"/><line nr="102" mi="0" ci="15" mb="0" cb="2"/><line nr="103" mi="0" ci="2" mb="0" cb="0"/><line nr="105" mi="0" ci="2" mb="0" cb="0"/><line nr="114" mi="0" ci="17" mb="0" cb="0"/><line nr="116" mi="0" ci="24" mb="0" cb="0"/><counter type="INSTRUCTION" missed="0" covered="234"/><counter type="BRANCH" missed="1" covered="13"/><counter type="LINE" missed="0" covered="32"/><counter type="COMPLEXITY" missed="1" covered="13"/><counter type="METHOD" missed="0" covered="7"/><counter type="CLASS" missed="0" covered="1"/></sourcefile><counter type="INSTRUCTION" missed="8" covered="468"/><counter type="BRANCH" missed="2" covered="24"/><counter type="LINE" missed="4" covered="66"/><counter type="COMPLEXITY" missed="5" covered="23"/><counter type="METHOD" missed="3" covered="12"/><counter type="CLASS" missed="1" covered="3"/></package><counter type="INSTRUCTION" missed="8" covered="468"/><counter type="BRANCH" missed="2" covered="24"/><counter type="LINE" missed="4" covered="66"/><counter type="COMPLEXITY" missed="5" covered="23"/><counter type="METHOD" missed="3" covered="12"/><counter type="CLASS" missed="1" covered="3"/></report>